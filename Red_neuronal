/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package red_neuronal;

import java.util.Scanner;
import red_neuronal.Matriz;
/**
 *
 * @author Jhonathan
 */
public class Red_Neuronal {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        int [][] matrizidentidad = new int[100][100];
        int [] solucion = new int[100];
        int [][] imagen1 = {
                            {-1, 1, 1, 1, 1, 1, 1, 1, 1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1, 1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1, 1,-1},
                            {-1,-1,-1, 1, 1, 1, 1,-1,-1,-1},
                            {-1,-1,-1, 1, 1, 1, 1,-1,-1,-1},
                            {-1,-1,-1, 1, 1, 1, 1,-1,-1,-1},
                            {-1,-1,-1, 1, 1, 1, 1,-1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1,-1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1,-1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1,-1,-1,-1},
                            };

        int [][] imagen2 = {
                            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1,-1,-1,-1,-1,-1,-1},
                            {-1, 1, 1, 1,-1,-1,-1,-1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1,-1,-1,-1, 1,-1,-1},
                            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                            };
					
        int [][] imagen3 = {
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1,-1,-1,-1,-1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1,-1,-1,-1,-1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1, 1, 1, 1, 1, 1, 1, 1,-1,-1},
                            };
        int [][] imagen4 = {
                            {-1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            {-1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            {-1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            {-1, 1, 1, 1,-1,-1,-1, 1, 1, 1},
                            {-1, 1, 1, 1,-1,-1,-1, 1, 1, 1},
                            {-1, 1, 1, 1,-1,-1,-1, 1, 1, 1},
                            {-1, 1, 1, 1,-1,-1,-1, 1, 1, 1},
                            {-1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            {-1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
                            };
        int [][] imagen5 = {
                            {-1,-1,-1,-1, 1, 1,-1,-1,-1,-1},
                            {-1,-1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1,-1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1,-1, 1, 1,-1,-1, 1, 1,-1,-1},
                            {-1,-1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1,-1, 1, 1,-1,-1, 1, 1,-1,-1},
                            {-1,-1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1,-1, 1, 1,-1,-1, 1, 1,-1,-1},
                            {-1,-1, 1, 1, 1, 1, 1, 1,-1,-1},
                            {-1,-1, 1, 1, 1, 1, 1, 1,-1,-1},
                            };
        int [] imgingreso = {
                            -1,-1,-1,-1, 1, 1,-1,-1,-1,-1,
                            -1,-1, 1, 1, 1, 1, 1, 1,-1,-1,
                            -1,-1, 1, 1, 1, 1, 1, 1,-1,-1,
                            -1,-1, 1, 1,-1,-1, 1, 1,-1,-1,
                            -1,-1, 1, 1, 1, 1, 1, 1,-1,-1,
                            -1,-1, 1, 1,-1,-1, 1, 1,-1,-1,
                            -1,-1, 1, 1, 1, 1, 1, 1,-1,-1,
                            -1,-1, 1, 1,-1,-1, 1, 1,-1,-1,
                            -1,-1, 1, 1, 1, 1, 1, 1,-1,-1,
                            -1,-1, 1, 1, 1, 1, 1, 1,-1,-1,
                            
                            };
        
        Matriz matriz = new Matriz();
        int [] vectorimagen1 = new int[100];
        int [] vectorimagen2 = new int[100];
        int [] vectorimagen3 = new int[100];
        int [] vectorimagen4 = new int[100];
        int [] vectorimagen5 = new int[100];
        
        int [][] multiVectxVectT1 = new int[100][100];
        int [][] multiVectxVectT2 = new int[100][100];
        int [][] multiVectxVectT3 = new int[100][100];
        int [][] multiVectxVectT4 = new int[100][100];
        int [][] multiVectxVectT5 = new int[100][100];
        
        int [][] w1 = new int[100][100];
        int [][] w2 = new int[100][100];
        int [][] w3 = new int[100][100];
        int [][] w4 = new int[100][100];
        int [][] w5 = new int[100][100];
        
        int [][] wtotal = new int[100][100];
        
        //llenamos la matriz identidad
        matriz.matrizidentidad(matrizidentidad, 100);
        
        //hallamos w1
        matriz.llenarvectormatriz(imagen1, vectorimagen1);        
        matriz.multiplicacionTraspuestaVectores(vectorimagen1, multiVectxVectT1);                
        matriz.llenarw(multiVectxVectT1, matrizidentidad, w1);
        //hallamos w2
        matriz.llenarvectormatriz(imagen2, vectorimagen2);        
        matriz.multiplicacionTraspuestaVectores(vectorimagen2, multiVectxVectT2);                
        matriz.llenarw(multiVectxVectT2, matrizidentidad, w2);
        //hallamos w3
        matriz.llenarvectormatriz(imagen3, vectorimagen3);        
        matriz.multiplicacionTraspuestaVectores(vectorimagen3, multiVectxVectT3);                
        matriz.llenarw(multiVectxVectT3, matrizidentidad, w3);
        //hallamos w4
        matriz.llenarvectormatriz(imagen4, vectorimagen4);        
        matriz.multiplicacionTraspuestaVectores(vectorimagen4, multiVectxVectT4);                
        matriz.llenarw(multiVectxVectT4, matrizidentidad, w4);
        //hallamos w5
        matriz.llenarvectormatriz(imagen5, vectorimagen5);        
        matriz.multiplicacionTraspuestaVectores(vectorimagen5, multiVectxVectT5);                
        matriz.llenarw(multiVectxVectT5, matrizidentidad, w5);
        
        //hallamos wtotal
        matriz.llenarwtotal(w1, w2, w3, w4, w5, wtotal);
        
        //hallar la solcion
        matriz.respuesta(imgingreso, wtotal, solucion );
        
        //matriz.mostrarvector(solucion, 100);
        matriz.comparando(solucion, vectorimagen1, vectorimagen2, vectorimagen3, vectorimagen4, vectorimagen5, wtotal);
        //System.out.println("los vectores son: "+matriz.vectoresiguales(solucion, solucion, 100));
        
        
    }
    
}
